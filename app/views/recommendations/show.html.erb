<div class="min-h-screen bg-gray-50 py-4 sm:py-8">
  <div class="max-w-7xl mx-auto px-3 sm:px-6 lg:px-8">

         <!-- Main Content: Mobile-First Layout -->
     <div class="grid lg:grid-cols-2 gap-3 sm:gap-8">
       
       <!-- Book Suggestions - First on mobile, right on desktop -->
       <div class="order-1 lg:order-2">
         <%= render 'suggestions', is_refined: @show_refined_message %>
       </div>
       
       <!-- Refine Form - Second on mobile, left on desktop -->
       <div class="bg-white rounded-xl sm:rounded-2xl shadow-lg p-3 sm:p-6 lg:p-8 order-2 lg:order-1 overflow-hidden">
        <h2 class="text-base sm:text-xl font-semibold text-gray-900 mb-3 sm:mb-6">Refine Suggestions</h2>
        
        <% if debug_mode? %>
          <!-- Debug Info for Refine Form -->
          <div class="mb-4 p-3 bg-blue-50 border border-blue-200 rounded text-xs">
            <strong>Refine Form Debug:</strong><br>
            @ai_response present: <%= @ai_response.present? %><br>
            @parsed_response present: <%= @parsed_response.present? %><br>
            @parsed_response keys: <%= @parsed_response&.keys&.inspect %><br>
            @parsed_response[:picks] count: <%= @parsed_response&.dig(:picks)&.count || 0 %><br>
            @parsed_response[:picks] first item: <%= @parsed_response&.dig(:picks, 0)&.inspect %><br>
            @parsed_response[:brief] present: <%= @parsed_response&.dig(:brief).present? %><br>
            @parsed_response[:brief] keys: <%= @parsed_response&.dig(:brief)&.keys&.inspect %><br>
            @user_prompt present: <%= @user_prompt.present? %><br>
            @user_prompt preview: <%= @user_prompt&.truncate(100) %><br>
            Session refined_session_id: <%= session[:refined_session_id] %>
          </div>
        <% end %>
        
        <%= form_with url: refine_recommendations_path, method: :post, local: true, class: "space-y-4 sm:space-y-6", data: { turbo: false, controller: "form" } do %>
          <!-- Hidden fields for context -->
          <%= hidden_field_tag :context, params[:context] %>
          
          <!-- Refinement Input -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">How would you like to refine these suggestions?</label>
            
                                      <!-- Quick Refinement Suggestions - Same look & feel as main form -->
             <div>
               <label class="block text-sm font-medium text-gray-700 mb-3 text-left">Quick suggestions</label>
               <div class="flex flex-wrap gap-2 justify-center">
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="Shorter books please" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     Shorter books
                   </span>
                 </label>
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="Different genre" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     Different genre
                   </span>
                 </label>
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="More recent books" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     More recent
                   </span>
                 </label>
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="Less challenging" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     Less challenging
                   </span>
                 </label>
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="More adventurous" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     More adventurous
                   </span>
                 </label>
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="Similar to what I liked" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     Similar to likes
                   </span>
                 </label>
               </div>
             </div>
            
            <%= text_area_tag :refinement_text, params[:refinement], 
                rows: 3, 
                class: "block w-full border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none",
                placeholder: "e.g. 'More sci-fi, less fantasy' or 'Shorter books please'",
                required: true %>
            <p class="mt-2 text-sm text-gray-500">Be specific about what you'd like to change or explore</p>
            
            <!-- Include Reading History Toggle - Only for unauthenticated users -->
            <% unless user_signed_in? %>
              <div class="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                <label class="flex items-center space-x-3 cursor-pointer" onclick="handleHistoryToggle()">
                  <%= check_box_tag :include_history, '1', false, 
                      class: 'h-5 w-5 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded', 
                      onclick: 'event.preventDefault(); handleHistoryToggle();' %>
                  <div class="flex-1">
                    <span class="text-sm font-medium text-blue-900">Utiliser mon historique de lecture</span>
                    <p class="text-xs text-blue-700 mt-1">
                      Importez vos livres Goodreads ou ajoutez manuellement pour des recommandations personnalisées
                    </p>
                  </div>
                </label>
              </div>
            <% else %>
              <!-- Include Reading History Toggle - For authenticated users -->
              <div class="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                <% 
                  # Récupérer les statistiques de la librairie
                  library_stats = current_user.user_readings.group(:status).count
                  total_books = library_stats.values.sum
                  read_books = library_stats['read'] || 0
                  to_read_books = library_stats['to_read'] || 0
                  reading_books = library_stats['reading'] || 0
                %>
                
                <label class="flex items-center space-x-3 cursor-pointer">
                  <%= check_box_tag :include_history, '1', false, 
                      class: 'h-5 w-5 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded',
                      onchange: 'toggleHistoryActions(this)' %>
                  <div class="flex-1">
                    <span class="text-sm font-medium text-blue-900">Utiliser mon historique de lecture</span>
                    
                    <!-- Library Status Display - Simplified for mobile -->
                    <div class="mt-2">
                      <% if total_books > 0 %>
                        <!-- Desktop: Full details -->
                        <div class="hidden sm:block text-xs text-blue-700">
                          <div class="flex items-center space-x-4">
                            <span class="flex items-center">
                              <svg class="w-3 h-3 mr-1 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                              </svg>
                              <strong><%= total_books %></strong> livres dans ta librairie
                            </span>
                            <span class="text-blue-600">
                              • <%= read_books %> lus • <%= reading_books %> en cours • <%= to_read_books %> à lire
                            </span>
                          </div>
                          <p class="mt-1 text-blue-600">
                            ✅ Ton historique sera utilisé pour des recommandations personnalisées
                          </p>
                        </div>
                        
                        <!-- Mobile: Minimal display -->
                        <div class="sm:hidden flex items-center justify-between">
                          <div class="flex items-center text-xs text-blue-700">
                            <svg class="w-3 h-3 mr-1 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                            </svg>
                            <span class="font-medium"><%= total_books %> livres</span>
                          </div>
                          <span class="text-xs text-green-600">✅</span>
                        </div>
                      <% else %>
                        <!-- Desktop: Full details -->
                        <div class="hidden sm:block text-xs text-blue-700">
                          <div class="flex items-center text-orange-600">
                            <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                            </svg>
                            <strong>0 livre</strong> dans ta librairie
                          </div>
                          <p class="mt-1 text-orange-600">
                            📚 Importe tes livres Goodreads pour des recommandations personnalisées
                          </p>
                        </div>
                        
                        <!-- Mobile: Minimal display -->
                        <div class="sm:hidden flex items-center justify-between">
                          <div class="flex items-center text-xs text-orange-600">
                            <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                            </svg>
                            <span class="font-medium">0 livre</span>
                          </div>
                          <span class="text-xs text-orange-600">📚</span>
                        </div>
                      <% end %>
                    </div>
                  </div>
                </label>
                
                <!-- History Actions - Hidden by default, shown when checkbox is checked -->
                <div id="history-actions" class="mt-3 pt-3 border-t border-blue-200 hidden">
                  <div class="flex flex-col sm:flex-row gap-2">
                    <% if total_books > 0 %>
                      <!-- User has books - show only import option -->
                      <%= link_to new_import_path, 
                          class: "inline-flex items-center px-3 py-2 text-xs font-medium text-green-700 bg-green-100 border border-green-200 rounded-lg hover:bg-green-200 transition-colors duration-200" do %>
                        <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"></path>
                        </svg>
                        Ajouter plus de livres
                      <% end %>
                    <% else %>
                      <!-- User has no books - strong CTA to import -->
                      <%= link_to new_import_path, 
                          class: "inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-gradient-to-r from-green-600 to-emerald-600 rounded-lg hover:from-green-700 hover:to-emerald-700 transition-all duration-200 transform hover:scale-105" do %>
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"></path>
                        </svg>
                        🚀 Importer Goodreads maintenant
                      <% end %>
                    <% end %>
                  </div>
                </div>
              </div>
            <% end %>
          </div>
          
          <!-- Submit Button - Same style as main form -->
          <button type="submit" id="refine-button" class="w-full bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 px-6 rounded-lg font-semibold hover:from-indigo-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-200 flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed">
            <!-- Spinner (hidden by default) -->
            <svg id="refine-spinner" class="hidden w-5 h-5 mr-2 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            <span id="refine-text">Refine Suggestions</span>
          </button>
          
                    <!-- New Search Button -->
          <div class="pt-4 sm:pt-6">
            <div class="text-center">
              <span class="text-sm text-gray-500 mb-2 sm:mb-3 block">Not quite what you're looking for?</span>
              <a href="/recommendations" 
                 class="inline-flex items-center justify-center w-full px-6 py-3 bg-gradient-to-r from-gray-50 to-gray-100 border border-gray-200 text-gray-700 font-medium rounded-xl hover:from-gray-100 hover:to-gray-200 hover:border-gray-300 transition-all duration-200 transform hover:scale-[1.02]">
                 Start New Search
               </a>
             </div>
           </div>
                 <% end %>
       </div>
     </div>
  </div>
</div>

<script>
  // Handle refinement chip clicks - Same behavior as main form
  document.addEventListener('DOMContentLoaded', function() {
    const refinementRadios = document.querySelectorAll('input[name="refinement_chips"]');
    
    refinementRadios.forEach(radio => {
      const chipSpan = radio.nextElementSibling;
      
      chipSpan.addEventListener('click', function() {
        // Check the radio button
        radio.checked = true;
        
        // Reset all chips to default state
        document.querySelectorAll('.refinement-chip').forEach(c => {
          c.classList.remove('bg-indigo-100', 'border-indigo-400', 'text-indigo-700');
          c.classList.add('bg-gray-50', 'border-gray-200', 'text-gray-600');
        });
        
        // Highlight selected chip
        this.classList.remove('bg-gray-50', 'border-gray-200', 'text-gray-600');
        this.classList.add('bg-indigo-100', 'border-indigo-400', 'text-indigo-700');
        
        // Pre-fill the textarea with the selected refinement
        const refinementTextarea = document.querySelector('textarea[name="refinement_text"]');
        if (refinementTextarea) {
          refinementTextarea.value = radio.value;
          refinementTextarea.focus();
          // Scroll to the textarea to make it visible
          refinementTextarea.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
      });
    });
  });
  
  // Function to show book details
  function showBookDetails(title, author) {
    // Search for the book on Google Books
    const searchQuery = encodeURIComponent(`${title} ${author}`);
    window.open(`https://www.google.com/search?tbm=bks&q=${searchQuery}`, '_blank');
  }
  
  // Function to handle history toggle click - Show signup wall immediately
  function handleHistoryToggle() {
    // Prevent the checkbox from being checked
    event.preventDefault();
    
    // Show signup wall modal immediately
    showSignupWallModal({
      action: 'show_signup_wall',
      message: 'Crée ton compte pour utiliser ton historique de lecture et affiner tes recommandations',
      title: 'Personnaliser avec ton historique',
      benefits: [
        'Importer tes lectures Goodreads',
        'Ajouter tes livres manuellement',
        'Recommandations basées sur tes goûts réels'
      ],
      cta_text: 'Créer mon compte',
      redirect_url: '<%= new_user_registration_path %>'
    });
  }
  
  // Function to add book to library
  function addToLibrary(title, author) {
    <% if user_signed_in? %>
      // User is signed in, redirect to add book form
      window.location.href = '<%= new_book_path %>?title=' + encodeURIComponent(title) + '&author=' + encodeURIComponent(author);
    <% else %>
      // User is not signed in, show signup popup
      alert('Please sign up to add books to your personal library and track your reading progress!');
    <% end %>
  }
  
  // Function to scroll to refine form
  function scrollToRefineForm() {
    const refineForm = document.querySelector('.bg-white.rounded-2xl.shadow-lg');
    if (refineForm) {
      refineForm.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
  }
  

  
  // Handle refine button loading state - Same as main form
  const refineForm = document.querySelector('form[action*="refine"]');
  const refineButton = document.getElementById('refine-button');
  const refineSpinner = document.getElementById('refine-spinner');
  const refineText = document.getElementById('refine-text');
  
  if (refineForm && refineButton) {
    refineForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      // Check if this is a signup wall case (unauthenticated user with history)
      const includeHistory = document.querySelector('input[name="include_history"]:checked');
      const isSignedIn = <%= user_signed_in? ? 'true' : 'false' %>;
      
      if (includeHistory && !isSignedIn) {
        // Signup wall case - use AJAX to show modal
        handleSignupWallAjax();
      } else {
        // Normal refine case - submit form normally
        handleNormalRefine();
      }
    });
  }
  
  // Function to handle signup wall via AJAX
  function handleSignupWallAjax() {
    // Show loading state
    refineButton.disabled = true;
    refineSpinner.classList.remove('hidden');
    refineText.textContent = 'Checking...';
    
    // Submit form via AJAX for signup wall
    const formData = new FormData(refineForm);
    
    fetch(refineForm.action, {
      method: 'POST',
      body: formData,
      headers: {
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
        'X-Requested-With': 'XMLHttpRequest'  // Mark as AJAX request
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.action === 'show_signup_wall') {
        showSignupWallModal(data);
      } else {
        // Unexpected response - fallback to normal submit
        handleNormalRefine();
      }
    })
    .catch(error => {
      console.error('AJAX Error:', error);
      // Fallback to normal submit on error
      handleNormalRefine();
    });
  }
  
  // Function to handle normal refine (no AJAX)
  function handleNormalRefine() {
    // Show loading state
    refineButton.disabled = true;
    refineSpinner.classList.remove('hidden');
    refineText.textContent = 'Refining...';
    
    // Add loading styles
    refineButton.classList.add('opacity-50', 'cursor-not-allowed');
    refineButton.classList.remove('hover:from-indigo-700', 'hover:to-purple-700', 'hover:scale-105');
    
    // Submit form normally - let Rails handle it
    refineForm.submit();
  }
  
  // Signup Wall Modal Functions
  function showSignupWallModal(data) {
    // Update modal content with data from server
    document.getElementById('signup-wall-title').textContent = data.title;
    document.getElementById('signup-wall-message').textContent = data.message;
    document.getElementById('signup-wall-cta').href = data.redirect_url;
    
    // Update benefits list
    const benefitsList = document.getElementById('signup-wall-benefits');
    benefitsList.innerHTML = '';
    data.benefits.forEach(benefit => {
      const li = document.createElement('li');
      li.className = 'flex items-center text-sm text-gray-600';
      li.innerHTML = `
        <svg class="h-4 w-4 text-green-500 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
        </svg>
        ${benefit}
      `;
      benefitsList.appendChild(li);
    });
    
    // Show modal
    document.getElementById('signup-wall-modal').classList.remove('hidden');
    
    // Track signup wall shown
    trackUserAction('signup_wall_shown', {
      action: 'refine_attempted',
      modal_data: data
    });
  }
  
  function closeSignupWallModal() {
    document.getElementById('signup-wall-modal').classList.add('hidden');
    
    // Reset refine button state
    refineButton.disabled = false;
    refineSpinner.classList.add('hidden');
    refineText.textContent = 'Refine Suggestions';
    refineButton.classList.remove('opacity-50', 'cursor-not-allowed');
    refineButton.classList.add('hover:from-indigo-700', 'hover:to-purple-700', 'hover:scale-105');
  }
  
  function trackUserAction(action, data = {}) {
    // Simple client-side tracking for MVP
    console.log('USER ACTION TRACKED:', { action, data, timestamp: new Date().toISOString() });
  }

  // Function to toggle history actions visibility
  function toggleHistoryActions(checkbox) {
    const historyActions = document.getElementById('history-actions');
    if (checkbox.checked) {
      historyActions.classList.remove('hidden');
    } else {
      historyActions.classList.add('hidden');
    }
  }
</script>

<style>
  /* Mobile-first improvements for recommendations show page */
  @media (max-width: 640px) {
    /* Better touch targets for mobile - fixed size to prevent resizing */
    .refinement-chip {
      height: 44px;
      min-height: 44px;
      width: auto;
      min-width: auto;
    }
    
    /* Improved button sizing for mobile */
    button[type="submit"] {
      min-height: 48px;
    }
    
    /* Better spacing for mobile */
    .space-y-3 > * + * {
      margin-top: 0.75rem;
    }
    
    /* Optimize book cards for mobile */
    .bg-gray-50 {
      margin-bottom: 0.75rem;
    }
    
         /* Ensure form doesn't overflow on mobile */
     .bg-white.rounded-xl {
       max-width: 100%;
       overflow-x: hidden;
     }
     
     /* Ensure buttons don't overflow */
     button, a {
       max-width: 100%;
       word-wrap: break-word;
     }
     
     /* Ensure textarea doesn't overflow */
     textarea {
       max-width: 100%;
       box-sizing: border-box;
     }
     
     /* Ensure suggestions don't overflow on mobile */
     .order-1.lg\\:order-2 {
       max-width: 100%;
       overflow-x: hidden;
     }
     
     /* Ensure book cards don't overflow */
     .bg-gray-50, .bg-white.rounded-lg {
       max-width: 100%;
       overflow-x: hidden;
     }
     
     /* Ensure all content respects container width */
     .max-w-7xl {
       max-width: 100%;
       overflow-x: hidden;
     }
  }
  
  /* Smooth transitions */
  .refinement-chip, button, a {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }
  

  
     /* Active states for mobile */
   .refinement-chip:active {
     transform: scale(0.95);
   }
   
   /* Global overflow prevention */
   * {
     box-sizing: border-box;
   }
   
   /* Ensure all content fits within container */
   .min-h-screen > * {
     max-width: 100%;
   }
   
   /* Force all elements to respect viewport width on mobile */
   @media (max-width: 640px) {
     body, html {
       overflow-x: hidden;
       max-width: 100vw;
     }
     
     .min-h-screen {
       max-width: 100vw;
       overflow-x: hidden;
     }
     
     .max-w-7xl {
       max-width: 100vw !important;
       overflow-x: hidden;
       padding-left: 0.75rem !important;
       padding-right: 0.75rem !important;
     }
     
     .grid {
       max-width: 100vw;
       overflow-x: hidden;
     }
     
     /* Force all direct children to respect width */
     .grid > * {
       max-width: 100vw !important;
       overflow-x: hidden;
     }
     
     /* Ensure no element can overflow */
     div, section, article, aside, header, footer, main {
       max-width: 100vw !important;
       overflow-x: hidden;
     }
   }
</style>

<!-- Signup Wall Modal -->
<div id="signup-wall-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
  <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
    <div class="mt-3 text-center">
      <!-- Header -->
      <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-indigo-100 mb-4">
        <svg class="h-6 w-6 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
        </svg>
      </div>
      
      <h3 id="signup-wall-title" class="text-lg font-medium text-gray-900 mb-2">
        Affiner mes recommandations
      </h3>
      
      <p id="signup-wall-message" class="text-sm text-gray-500 mb-6">
        Crée ton compte pour affiner tes recommandations avec tes données personnelles
      </p>
      
      <!-- Benefits List -->
      <div class="text-left mb-6">
        <ul id="signup-wall-benefits" class="space-y-2">
          <li class="flex items-center text-sm text-gray-600">
            <svg class="h-4 w-4 text-green-500 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
            Affiner tes recommandations
          </li>
          <li class="flex items-center text-sm text-gray-600">
            <svg class="h-4 w-4 text-green-500 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
            Importer tes lectures Goodreads
          </li>
          <li class="flex items-center text-sm text-gray-600">
            <svg class="h-4 w-4 text-green-500 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>
            Recevoir tes recos par email
          </li>
        </ul>
      </div>
      
      <!-- Action Buttons -->
      <div class="flex flex-col space-y-3">
        <a id="signup-wall-cta" href="#" 
           class="w-full bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 px-6 rounded-lg font-semibold hover:from-indigo-700 hover:to-purple-700 transition-all duration-200 transform hover:scale-105">
          Créer mon compte
        </a>
        
        <a href="<%= new_user_session_path %>" 
           class="w-full bg-white border-2 border-indigo-600 text-indigo-600 py-3 px-6 rounded-lg font-semibold hover:bg-indigo-50 transition-all duration-200 transform hover:scale-105">
          Se connecter
        </a>
        
        <button onclick="closeSignupWallModal()" 
                class="w-full bg-gray-100 text-gray-700 py-3 px-6 rounded-lg font-medium hover:bg-gray-200 transition-all duration-200">
          Continuer sans compte
        </button>
      </div>
    </div>
  </div>
</div>
