<div class="min-h-screen bg-gray-50 py-4 sm:py-8">
  <div class="max-w-7xl mx-auto px-3 sm:px-6 lg:px-8">

         <!-- Main Content: Mobile-First Layout -->
     <div class="grid lg:grid-cols-2 gap-3 sm:gap-8">
       
       <!-- Book Suggestions - First on mobile, right on desktop -->
       <div class="order-1 lg:order-2">
         <%= render 'suggestions', is_refined: @show_refined_message %>
       </div>
       
       <!-- Refine Form - Second on mobile, left on desktop -->
       <div class="bg-white rounded-xl sm:rounded-2xl shadow-lg p-3 sm:p-6 lg:p-8 order-2 lg:order-1 overflow-hidden">
        <h2 class="text-base sm:text-xl font-semibold text-gray-900 mb-3 sm:mb-6">Refine Suggestions</h2>
        
        <% if debug_mode? %>
          <!-- Debug Info for Refine Form -->
          <div class="mb-4 p-3 bg-blue-50 border border-blue-200 rounded text-xs">
            <strong>Refine Form Debug:</strong><br>
            @ai_response present: <%= @ai_response.present? %><br>
            @parsed_response present: <%= @parsed_response.present? %><br>
            @parsed_response keys: <%= @parsed_response&.keys&.inspect %><br>
            @parsed_response[:picks] count: <%= @parsed_response&.dig(:picks)&.count || 0 %><br>
            @parsed_response[:picks] first item: <%= @parsed_response&.dig(:picks, 0)&.inspect %><br>
            @parsed_response[:brief] present: <%= @parsed_response&.dig(:brief).present? %><br>
            @parsed_response[:brief] keys: <%= @parsed_response&.dig(:brief)&.keys&.inspect %><br>
            @user_prompt present: <%= @user_prompt.present? %><br>
            @user_prompt preview: <%= @user_prompt&.truncate(100) %><br>
            Session refined_session_id: <%= session[:refined_session_id] %>
          </div>
        <% end %>
        
        <%= form_with url: refine_recommendations_path, method: :post, local: true, class: "space-y-4 sm:space-y-6", data: { turbo: false, controller: "form" } do %>
          <!-- Hidden fields for context -->
          <%= hidden_field_tag :context, params[:context] %>
          
          <!-- Refinement Input -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">How would you like to refine these suggestions?</label>
            
                                      <!-- Quick Refinement Suggestions - Same look & feel as main form -->
             <div>
               <label class="block text-sm font-medium text-gray-700 mb-3 text-left">Quick suggestions</label>
               <div class="flex flex-wrap gap-2 justify-center">
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="Shorter books please" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     Shorter books
                   </span>
                 </label>
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="Different genre" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     Different genre
                   </span>
                 </label>
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="More recent books" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     More recent
                   </span>
                 </label>
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="Less challenging" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     Less challenging
                   </span>
                 </label>
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="More adventurous" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     More adventurous
                   </span>
                 </label>
                 <label class="relative">
                   <input type="radio" name="refinement_chips" value="Similar to what I liked" class="sr-only">
                   <span class="refinement-chip inline-flex items-center justify-center px-3 py-2 rounded-lg text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-indigo-50 hover:border-indigo-300 hover:text-indigo-700 transition-all duration-200 active:scale-95">
                     Similar to likes
                   </span>
                 </label>
               </div>
             </div>
            
            <%= text_area_tag :refinement_text, params[:refinement], 
                rows: 3, 
                class: "block w-full border-gray-300 rounded-lg shadow-sm focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none",
                placeholder: "e.g. 'More sci-fi, less fantasy' or 'Shorter books please'",
                required: true %>
            <p class="mt-2 text-sm text-gray-500">Be specific about what you'd like to change or explore</p>
          </div>
          
          <!-- Submit Button - Same style as main form -->
          <button type="submit" id="refine-button" class="w-full bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 px-6 rounded-lg font-semibold hover:from-indigo-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-200 flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed">
            <!-- Spinner (hidden by default) -->
            <svg id="refine-spinner" class="hidden w-5 h-5 mr-2 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            <span id="refine-text">Refine Suggestions</span>
          </button>
          
                    <!-- New Search Button -->
          <div class="pt-4 sm:pt-6">
            <div class="text-center">
              <span class="text-sm text-gray-500 mb-2 sm:mb-3 block">Not quite what you're looking for?</span>
              <a href="/recommendations" 
                 class="inline-flex items-center justify-center w-full px-6 py-3 bg-gradient-to-r from-gray-50 to-gray-100 border border-gray-200 text-gray-700 font-medium rounded-xl hover:from-gray-100 hover:to-gray-200 hover:border-gray-300 transition-all duration-200 transform hover:scale-[1.02]">
                 Start New Search
               </a>
             </div>
           </div>
                 <% end %>
       </div>
     </div>
  </div>
</div>

<script>
  // Handle refinement chip clicks - Same behavior as main form
  document.addEventListener('DOMContentLoaded', function() {
    const refinementRadios = document.querySelectorAll('input[name="refinement_chips"]');
    
    refinementRadios.forEach(radio => {
      const chipSpan = radio.nextElementSibling;
      
      chipSpan.addEventListener('click', function() {
        // Check the radio button
        radio.checked = true;
        
        // Reset all chips to default state
        document.querySelectorAll('.refinement-chip').forEach(c => {
          c.classList.remove('bg-indigo-100', 'border-indigo-400', 'text-indigo-700');
          c.classList.add('bg-gray-50', 'border-gray-200', 'text-gray-600');
        });
        
        // Highlight selected chip
        this.classList.remove('bg-gray-50', 'border-gray-200', 'text-gray-600');
        this.classList.add('bg-indigo-100', 'border-indigo-400', 'text-indigo-700');
        
        // Pre-fill the textarea with the selected refinement
        const refinementTextarea = document.querySelector('textarea[name="refinement_text"]');
        if (refinementTextarea) {
          refinementTextarea.value = radio.value;
          refinementTextarea.focus();
          // Scroll to the textarea to make it visible
          refinementTextarea.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
      });
    });
  });
  
  // Function to show book details
  function showBookDetails(title, author) {
    // Search for the book on Google Books
    const searchQuery = encodeURIComponent(`${title} ${author}`);
    window.open(`https://www.google.com/search?tbm=bks&q=${searchQuery}`, '_blank');
  }
  
  // Function to add book to library
  function addToLibrary(title, author) {
    <% if user_signed_in? %>
      // User is signed in, redirect to add book form
      window.location.href = '<%= new_book_path %>?title=' + encodeURIComponent(title) + '&author=' + encodeURIComponent(author);
    <% else %>
      // User is not signed in, show signup popup
      alert('Please sign up to add books to your personal library and track your reading progress!');
    <% end %>
  }
  
  // Function to scroll to refine form
  function scrollToRefineForm() {
    const refineForm = document.querySelector('.bg-white.rounded-2xl.shadow-lg');
    if (refineForm) {
      refineForm.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
  }
  

  
  // Handle refine button loading state - Same as main form
  const refineForm = document.querySelector('form[action*="refine"]');
  const refineButton = document.getElementById('refine-button');
  const refineSpinner = document.getElementById('refine-spinner');
  const refineText = document.getElementById('refine-text');
  
  if (refineForm && refineButton) {
    refineForm.addEventListener('submit', function() {
      // Show loading state using same logic as main form
      refineButton.disabled = true;
      refineSpinner.classList.remove('hidden');
      refineText.textContent = 'Refining...';
      
      // Add loading styles
      refineButton.classList.add('opacity-50', 'cursor-not-allowed');
      refineButton.classList.remove('hover:from-indigo-700', 'hover:to-purple-700', 'hover:scale-105');
    });
  }
</script>

<style>
  /* Mobile-first improvements for recommendations show page */
  @media (max-width: 640px) {
    /* Better touch targets for mobile - fixed size to prevent resizing */
    .refinement-chip {
      height: 44px;
      min-height: 44px;
      width: auto;
      min-width: auto;
    }
    
    /* Improved button sizing for mobile */
    button[type="submit"] {
      min-height: 48px;
    }
    
    /* Better spacing for mobile */
    .space-y-3 > * + * {
      margin-top: 0.75rem;
    }
    
    /* Optimize book cards for mobile */
    .bg-gray-50 {
      margin-bottom: 0.75rem;
    }
    
         /* Ensure form doesn't overflow on mobile */
     .bg-white.rounded-xl {
       max-width: 100%;
       overflow-x: hidden;
     }
     
     /* Ensure buttons don't overflow */
     button, a {
       max-width: 100%;
       word-wrap: break-word;
     }
     
     /* Ensure textarea doesn't overflow */
     textarea {
       max-width: 100%;
       box-sizing: border-box;
     }
     
     /* Ensure suggestions don't overflow on mobile */
     .order-1.lg\\:order-2 {
       max-width: 100%;
       overflow-x: hidden;
     }
     
     /* Ensure book cards don't overflow */
     .bg-gray-50, .bg-white.rounded-lg {
       max-width: 100%;
       overflow-x: hidden;
     }
     
     /* Ensure all content respects container width */
     .max-w-7xl {
       max-width: 100%;
       overflow-x: hidden;
     }
  }
  
  /* Smooth transitions */
  .refinement-chip, button, a {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  }
  

  
     /* Active states for mobile */
   .refinement-chip:active {
     transform: scale(0.95);
   }
   
   /* Global overflow prevention */
   * {
     box-sizing: border-box;
   }
   
   /* Ensure all content fits within container */
   .min-h-screen > * {
     max-width: 100%;
   }
   
   /* Force all elements to respect viewport width on mobile */
   @media (max-width: 640px) {
     body, html {
       overflow-x: hidden;
       max-width: 100vw;
     }
     
     .min-h-screen {
       max-width: 100vw;
       overflow-x: hidden;
     }
     
     .max-w-7xl {
       max-width: 100vw !important;
       overflow-x: hidden;
       padding-left: 0.75rem !important;
       padding-right: 0.75rem !important;
     }
     
     .grid {
       max-width: 100vw;
       overflow-x: hidden;
     }
     
     /* Force all direct children to respect width */
     .grid > * {
       max-width: 100vw !important;
       overflow-x: hidden;
     }
     
     /* Ensure no element can overflow */
     div, section, article, aside, header, footer, main {
       max-width: 100vw !important;
       overflow-x: hidden;
     }
   }
</style>
