<div class="min-h-screen bg-gray-50 py-8">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="text-center mb-12">
      <h1 class="text-3xl font-bold text-gray-900 mb-4">Get Your Next Book</h1>
      <p class="text-lg text-gray-600">Tell us what you're in the mood for, we'll find your perfect next read</p>
    </div>

    <!-- Main Content: 2-Column Layout -->
    <div class="grid lg:grid-cols-2 gap-8 mb-12">
      
      <!-- Left Column: Context Input -->
      <div class="bg-white rounded-2xl shadow-lg p-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-6">What are you in the mood for?</h2>
        
        <%= form_with url: recommendations_path, method: :post, local: true, class: "space-y-6", data: { turbo: false, controller: "form" } do %>
          <!-- Context Textarea -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Describe your reading mood</label>
            <%= text_area_tag :context, params[:context], 
                rows: 4, 
                class: "block w-full border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm resize-none",
                placeholder: "e.g. 'After Sapiens, I want tech & society, optimistic tone, 250–350 pages'",
                required: true %>
            <p class="mt-2 text-sm text-gray-500">Be specific about genre, tone, length, or what you want to explore next</p>
          </div>

          <!-- Tone Chips -->
          <div>
            <label class="block text-sm font-medium text-gray-700 mb-3">Tone & Style</label>
            <div class="flex flex-wrap gap-2">
              <% ['Deep dive', 'Fast-paced', 'Optimistic', 'Thoughtful', 'Adventure', 'Cozy', 'Challenging', 'Light'].each do |tone| %>
                <label class="relative">
                  <%= check_box_tag 'tone_chips[]', tone, false, class: 'sr-only' %>
                  <span class="inline-flex items-center px-3 py-2 rounded-full text-sm font-medium bg-gray-50 border border-gray-200 text-gray-600 cursor-pointer hover:bg-gray-100 transition-colors duration-200">
                    <%= tone %>
                  </span>
                </label>
              <% end %>
            </div>
          </div>

          <!-- Reading History Toggle -->
          <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
  <div>
              <label class="text-sm font-medium text-gray-700">Use my reading history</label>
              <p class="text-sm text-gray-500">
                <% if user_signed_in? %>
                  <%= current_user.readings.count %> books in your history
                <% else %>
                  Sign in to use your reading history
                <% end %>
    </p>
  </div>
            <% if user_signed_in? %>
              <%= check_box_tag :include_history, '1', true, class: 'h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded' %>
            <% else %>
              <div class="text-sm text-gray-400">Sign in required</div>
            <% end %>
          </div>

          <!-- Submit Button -->
          <button type="submit" class="w-full bg-gradient-to-r from-indigo-600 to-purple-600 text-white py-3 px-6 rounded-lg font-semibold hover:from-indigo-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-200 flex items-center justify-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
            </svg>
            Get Instant Brief
          </button>
        <% end %>

        <!-- Quick Tips -->
        <div class="mt-6 p-4 bg-blue-50 rounded-lg">
          <h4 class="text-sm font-medium text-blue-800 mb-2">💡 Quick Tips</h4>
          <ul class="text-sm text-blue-700 space-y-1">
            <li>• Mention specific authors or books you love</li>
            <li>• Include your preferred reading time (quick reads vs. deep dives)</li>
            <li>• Specify if you want to explore new genres or stick to favorites</li>
          </ul>
        </div>
      </div>

      <!-- Right Column: Results Display -->
      <div class="bg-white rounded-2xl shadow-lg p-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-6">Your Reading Brief</h2>
        
        <% if @ai_response %>
          <!-- AI Response Display -->
          <div class="space-y-6">
            <!-- Brief Section -->
            <% if @parsed_response&.dig(:brief) %>
              <div class="space-y-4">
                <!-- What you tend to like -->
                <% if @parsed_response[:brief][:likes]&.any? %>
                  <div>
                    <h4 class="text-sm font-medium text-green-700 mb-2 flex items-center">
                      <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                      </svg>
                      What you tend to like
                    </h4>
                    <ul class="space-y-1">
                      <% @parsed_response[:brief][:likes].each do |point| %>
                        <li class="text-sm text-gray-700 flex items-start">
                          <span class="w-1.5 h-1.5 bg-green-500 rounded-full mt-2 mr-2 flex-shrink-0"></span>
                          <%= point %>
                        </li>
                      <% end %>
                    </ul>
                  </div>
                <% end %>

                <!-- What to explore next -->
                <% if @parsed_response[:brief][:explore]&.any? %>
                  <div>
                    <h4 class="text-sm font-medium text-blue-700 mb-2 flex items-center">
                      <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                      </svg>
                      What to explore next
                    </h4>
                    <ul class="space-y-1">
                      <% @parsed_response[:brief][:explore].each do |point| %>
                        <li class="text-sm text-gray-700 flex items-start">
                          <span class="w-1.5 h-1.5 bg-blue-500 rounded-full mt-2 mr-2 flex-shrink-0"></span>
                          <%= point %>
                        </li>
                      <% end %>
                    </ul>
                  </div>
                <% end %>

                <!-- Pitfalls to avoid -->
                <% if @parsed_response[:brief][:avoid]&.any? %>
                  <div>
                    <h4 class="text-sm font-medium text-amber-700 mb-2 flex items-center">
                      <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.667-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                      </svg>
                      Pitfalls to avoid
                    </h4>
                    <ul class="space-y-1">
                      <% @parsed_response[:brief][:avoid].each do |point| %>
                        <li class="text-sm text-gray-700 flex items-start">
                          <span class="w-1.5 h-1.5 bg-amber-500 rounded-full mt-2 mr-2 flex-shrink-0"></span>
                          <%= point %>
                        </li>
                      <% end %>
                    </ul>
                  </div>
                <% end %>
              </div>
            <% end %>

            <!-- Top Picks Section -->
            <% if @parsed_response&.dig(:picks)&.any? %>
              <div class="border-t pt-6">
                <h4 class="text-lg font-semibold text-gray-900 mb-4">Top Picks for You</h4>
                <div class="space-y-4">
                  <% @parsed_response[:picks].each do |pick| %>
                    <div class="bg-gray-50 rounded-lg p-4">
                      <!-- Book Cover Placeholder -->
                      <div class="flex items-start space-x-4">
                        <div class="w-16 h-20 bg-gradient-to-br from-indigo-400 to-purple-500 rounded-lg flex items-center justify-center text-white font-bold text-lg flex-shrink-0">
                          <%= pick[:title].split(' ').map(&:first).join('').upcase[0..1] %>
    </div>
                        
                        <div class="flex-1 min-w-0">
                          <h5 class="text-lg font-semibold text-gray-900 mb-1"><%= pick[:title] %></h5>
                          <p class="text-sm text-gray-600 mb-2">by <%= pick[:author] %></p>
                          
                          <% if pick[:pitch].present? %>
                            <p class="text-sm text-gray-700 mb-2"><%= pick[:pitch] %></p>
                          <% end %>
                          
                          <% if pick[:why].present? %>
                            <p class="text-xs text-gray-600 mb-3"><strong>Why this pick:</strong> <%= pick[:why] %></p>
<% end %>
                          
                          <!-- Confidence Meter -->
                          <div class="flex items-center justify-between">
                            <div class="flex items-center space-x-2">
                              <span class="text-xs text-gray-500">Confidence:</span>
                              <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium
                                <%= case pick[:confidence]&.downcase
                                    when 'high' then 'bg-green-100 text-green-800'
                                    when 'medium' then 'bg-yellow-100 text-yellow-800'
                                    when 'low' then 'bg-red-100 text-red-800'
                                    else 'bg-gray-100 text-gray-800'
                                    end %>">
                                <%= pick[:confidence] || 'Medium' %>
                              </span>
                            </div>
                            
                            <!-- Feedback Buttons -->
                            <div class="flex space-x-2">
                              <button class="feedback-btn p-1.5 text-gray-400 hover:text-green-600 transition-colors duration-200" data-book-id="<%= pick[:number] %>" data-feedback="like" title="I like this">
                                👍
                              </button>
                              <button class="feedback-btn p-1.5 text-gray-400 hover:text-red-600 transition-colors duration-200" data-book-id="<%= pick[:number] %>" data-feedback="dislike" title="Not for me">
                                👎
                              </button>
                              <button class="feedback-btn p-1.5 text-gray-400 hover:text-blue-600 transition-colors duration-200" data-book-id="<%= pick[:number] %>" data-feedback="save" title="Save to my list">
                                💾
                              </button>
                              <button class="feedback-btn p-1.5 text-gray-400 hover:text-purple-600 transition-colors duration-200" data-book-id="<%= pick[:number] %>" data-feedback="more" title="Tell me more">
                                📖
                              </button>
                            </div>
                          </div>

                          <!-- Sign Up Gate for Feedback -->
                          <% unless user_signed_in? %>
                            <div class="mt-3 p-2 bg-amber-50 border border-amber-200 rounded text-center">
                              <p class="text-xs text-amber-700">
                                <strong>Sign up</strong> to save books and get better recommendations
                              </p>
                            </div>
                          <% end %>
                        </div>
                      </div>
                    </div>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>

        <% elsif @ai_error %>
          <!-- Error State -->
          <div class="text-center py-12">
            <div class="mx-auto h-12 w-12 text-red-400 mb-4">
              <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
              </svg>
            </div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Something went wrong</h3>
            <p class="text-gray-500 mb-4"><%= @ai_error %></p>
            <button onclick="location.reload()" class="text-indigo-600 hover:text-indigo-500 font-medium">
              Try again
            </button>
          </div>

        <% else %>
          <!-- Empty State -->
          <div class="text-center py-12">
            <div class="mx-auto h-12 w-12 text-gray-400 mb-4">
              <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
              </svg>
            </div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Ready for your next book?</h3>
            <p class="text-gray-500">Fill out the form on the left and click "Get Instant Brief" to get started.</p>
          </div>
        <% end %>
      </div>
    </div>

    <!-- Bottom Panel: Refinement & User Engagement -->
    <% if @ai_response %>
      <div class="bg-white rounded-2xl shadow-lg p-8">
        <h2 class="text-xl font-semibold text-gray-900 mb-6">Refine & Discover More</h2>
        
        <div class="grid md:grid-cols-2 gap-8">
          <!-- Left Side: Data Enhancement -->
          <div>
            <h4 class="text-sm font-medium text-gray-700 mb-3 flex items-center">
              <svg class="w-5 h-5 mr-2 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
              </svg>
              Get Better Recommendations
            </h4>
            
            <div class="space-y-4">
              <!-- Import Goodreads -->
              <div class="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-lg p-4">
                <div class="flex items-center mb-3">
                  <div class="h-10 w-10 bg-green-100 rounded-lg flex items-center justify-center mr-3">
                    <svg class="h-5 w-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M9 19l3 3m0 0l3-3m-3 3V10"></path>
                    </svg>
                  </div>
                  <div>
                    <h5 class="font-medium text-green-900">Import Goodreads</h5>
                    <p class="text-sm text-green-700">Get personalized recommendations based on your reading history</p>
                  </div>
                </div>
                
                <% if user_signed_in? %>
                  <%= link_to "Import Library", new_import_path, 
                      class: "inline-flex items-center px-4 py-2 bg-green-600 text-white text-sm font-medium rounded-lg hover:bg-green-700 transition-colors duration-200" %>
                <% else %>
                  <div class="text-center">
                    <p class="text-sm text-green-600 mb-3">Sign up required to import your Goodreads data</p>
                    <%= link_to "Sign Up to Import", new_user_registration_path, 
                        class: "inline-flex items-center px-4 py-2 bg-green-600 text-white text-sm font-medium rounded-lg hover:bg-green-700 transition-colors duration-200" %>
                  </div>
                <% end %>
              </div>

              <!-- Add Books Manually -->
              <div class="bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-4">
                <div class="flex items-center mb-3">
                  <div class="h-10 w-10 bg-blue-100 rounded-lg flex items-center justify-center mr-3">
                    <svg class="h-5 w-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                    </svg>
                  </div>
                  <div>
                    <h5 class="font-medium text-blue-900">Add Books Manually</h5>
                    <p class="text-sm text-blue-700">Build your library by adding books you've read or want to read</p>
                  </div>
                </div>
                
                <% if user_signed_in? %>
                  <%= link_to "Add Book", new_book_path, 
                      class: "inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors duration-200" %>
                <% else %>
                  <div class="text-center">
                    <p class="text-sm text-blue-600 mb-3">Sign up required to build your personal library</p>
                    <%= link_to "Sign Up to Add Books", new_user_registration_path, 
                        class: "inline-flex items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 transition-colors duration-200" %>
                  </div>
                <% end %>
              </div>

              <!-- Sign Up CTA -->
              <% unless user_signed_in? %>
                <div class="bg-gradient-to-r from-purple-50 to-indigo-50 border border-purple-200 rounded-lg p-4 text-center">
                  <h5 class="font-medium text-purple-900 mb-2">Unlock Personalized AI</h5>
                  <p class="text-sm text-purple-700 mb-3">Sign up to get recommendations tailored to your reading taste</p>
                  <%= link_to "Sign Up Now", new_user_registration_path, 
                      class: "inline-flex items-center px-6 py-2 bg-gradient-to-r from-purple-600 to-indigo-600 text-white text-sm font-medium rounded-lg hover:from-purple-700 hover:to-indigo-700 transition-all duration-200" %>
                </div>
              <% end %>
            </div>
          </div>

          <!-- Right Side: Refinement Options -->
          <div>
            <h4 class="text-sm font-medium text-gray-700 mb-3 flex items-center">
              <svg class="w-5 h-5 mr-2 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
              Refine Your Results
            </h4>
            
            <!-- Quick Refinement Chips -->
            <div class="mb-4">
              <p class="text-xs text-gray-500 mb-2">Quick refinements:</p>
              <div class="flex flex-wrap gap-2">
                <% ['More like this', 'Less heavy', 'Different genre', 'Shorter books', 'Longer books', 'More challenging', 'Easier reads', 'Similar authors'].each do |refinement| %>
                  <button class="refinement-chip px-3 py-2 text-sm font-medium bg-gray-100 border border-gray-200 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors duration-200" data-refinement="<%= refinement %>">
                    <%= refinement %>
                  </button>
                <% end %>
              </div>
            </div>

            <!-- Custom Refinement Input -->
            <div class="mb-4">
              <p class="text-xs text-gray-500 mb-2">Custom refinement:</p>
              <div class="flex space-x-2">
                <input type="text" id="custom-refinement" placeholder="e.g., 'More sci-fi, less fantasy'" 
                       class="flex-1 border-gray-300 rounded-lg shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm">
                <button id="refine-btn" class="px-4 py-2 bg-indigo-600 text-white rounded-lg font-medium hover:bg-indigo-700 transition-colors duration-200">
                  Refine
                </button>
              </div>
            </div>

            <!-- Sign Up for Refinements -->
            <% unless user_signed_in? %>
              <div class="bg-amber-50 border border-amber-200 rounded-lg p-3 text-center">
                <p class="text-xs text-amber-700">
                  <strong>Sign up</strong> to save your refinements and get better suggestions
                </p>
              </div>
            <% end %>
          </div>
        </div>

        <!-- Recent Refinements (for signed-in users) -->
        <% if user_signed_in? %>
          <div class="mt-8 pt-6 border-t border-gray-200">
            <h4 class="text-sm font-medium text-gray-700 mb-3">Recent refinements</h4>
            <div class="text-sm text-gray-500 italic">
              No refinements yet. Start refining to see your history here.
            </div>
          </div>
        <% end %>
      </div>
    <% end %>
  </div>
</div>

<script>
// Handle tone chip selection
document.addEventListener('DOMContentLoaded', function() {
  console.log('Recommendations page loaded');
  
  const toneChips = document.querySelectorAll('input[name="tone_chips[]"]');
  
  toneChips.forEach(chip => {
    chip.addEventListener('change', function() {
      const span = this.nextElementSibling;
      if (this.checked) {
        span.classList.remove('bg-gray-50', 'border-gray-200', 'text-gray-600');
        span.classList.add('bg-indigo-100', 'border-indigo-300', 'text-indigo-700');
      } else {
        span.classList.remove('bg-indigo-100', 'border-indigo-300', 'text-indigo-700');
        span.classList.add('bg-gray-50', 'border-gray-200', 'text-gray-600');
      }
    });
  });

  // Handle form submission
  const form = document.querySelector('form');
  if (form) {
    console.log('Form found:', form);
    
    form.addEventListener('submit', function(e) {
      console.log('Form submitted');
      
      // Get form data
      const context = document.querySelector('textarea[name="context"]').value.trim();
      const toneChips = Array.from(document.querySelectorAll('input[name="tone_chips[]"]:checked')).map(cb => cb.value);
      const includeHistory = document.querySelector('input[name="include_history"]')?.checked || false;
      
      console.log('Form data:', { context, toneChips, includeHistory });
      
      // Validate context is not empty
      if (!context) {
        e.preventDefault();
        alert('Please describe what you\'re in the mood for reading.');
        return;
      }
      
      // Show loading state
      const submitBtn = form.querySelector('button[type="submit"]');
      const originalText = submitBtn.innerHTML;
      submitBtn.innerHTML = '<svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>Getting recommendations...';
      submitBtn.disabled = true;
      
      // Re-enable button after a delay (in case of errors)
      setTimeout(() => {
        submitBtn.innerHTML = originalText;
        submitBtn.disabled = false;
      }, 10000);
    });
  }

  // Handle refinement chip clicks
  const refinementChips = document.querySelectorAll('.refinement-chip');
  refinementChips.forEach(chip => {
    chip.addEventListener('click', function() {
      const refinement = this.dataset.refinement;
      const customInput = document.getElementById('custom-refinement');
      customInput.value = refinement;
      customInput.focus();
    });
  });

  // Handle custom refinement submission
  const refineBtn = document.getElementById('refine-btn');
  if (refineBtn) {
    refineBtn.addEventListener('click', function() {
      const refinement = document.getElementById('custom-refinement').value.trim();
      if (refinement) {
        console.log('Refinement submitted:', refinement);
        
        // Show toast notification
        showToast('Refinement submitted! Getting new recommendations...', 'success');
        
        // TODO: Submit refinement to backend
        // For now, just log it
        setTimeout(() => {
          showToast('This feature is coming soon!', 'info');
        }, 2000);
      }
    });
  }

  // Handle feedback button clicks
  const feedbackBtns = document.querySelectorAll('.feedback-btn');
  feedbackBtns.forEach(btn => {
    btn.addEventListener('click', function() {
      const bookId = this.dataset.bookId;
      const feedback = this.dataset.feedback;
      
      console.log('Feedback submitted:', { bookId, feedback });
      
      // Check if user is signed in
      const isSignedIn = <%= user_signed_in? ? 'true' : 'false' %>;
      
      if (!isSignedIn) {
        // Show sign-up prompt for anonymous users
        showToast('Sign up to save your feedback and get better recommendations!', 'info');
        return;
      }
      
      // Visual feedback
      this.classList.add('scale-110');
      setTimeout(() => {
        this.classList.remove('scale-110');
      }, 200);
      
      // Show appropriate message based on feedback type
      const feedbackMessages = {
        'like': 'Thanks! We\'ll recommend more like this.',
        'dislike': 'Got it! We\'ll avoid similar books.',
        'save': 'Book saved to your reading list!',
        'more': 'Book details expanded!'
      };
      
      showToast(feedbackMessages[feedback] || 'Feedback recorded!', 'success');
      
      // TODO: Send feedback to backend for storage
      // For now, just log it
      console.log('Feedback stored:', { bookId, feedback, timestamp: new Date().toISOString() });
    });
  });
});

// Toast notification function
function showToast(message, type = 'info') {
  // Create toast element
  const toast = document.createElement('div');
  toast.className = `fixed top-4 right-4 z-50 px-6 py-3 rounded-lg text-white font-medium transform transition-all duration-300 translate-x-full ${
    type === 'success' ? 'bg-green-500' : 
    type === 'error' ? 'bg-red-500' : 
    'bg-blue-500'
  }`;
  toast.textContent = message;
  
  document.body.appendChild(toast);
  
  // Animate in
  setTimeout(() => {
    toast.classList.remove('translate-x-full');
  }, 100);
  
  // Animate out and remove
  setTimeout(() => {
    toast.classList.add('translate-x-full');
    setTimeout(() => {
      document.body.removeChild(toast);
    }, 300);
  }, 3000);
}
</script>
